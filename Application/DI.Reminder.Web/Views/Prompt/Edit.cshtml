@model DI.Reminder.Web.Models.PromptViewModel

@{
    ViewBag.Title = "Edit";
}
<link href="~/Content/RegistrationSheet.css" rel="stylesheet" />
<h2 class="title">Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div style="float:left; width:45%">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Prompt.ID)

    <div>
        @Html.LabelFor(model => model.Prompt.Name, htmlAttributes: new { @class = "boton1" })
        <div>
            @Html.EditorFor(model => model.Prompt.Name, new { htmlAttributes = new { @class = "input" } })
            @Html.ValidationMessageFor(model => model.Prompt.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @Html.LabelFor(model => model.Prompt.Date, htmlAttributes: new { @class = "boton1" })
        <div>
            @Html.EditorFor(model => model.Prompt.Date, new { htmlAttributes = new { @class = "input" } })
            @Html.ValidationMessageFor(model => model.Prompt.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @Html.LabelFor(model => model.Prompt.Description, htmlAttributes: new { @class = "boton1" })
        <div>
            @Html.EditorFor(model => model.Prompt.Description, new { htmlAttributes = new { @class = "input" } })
            @Html.ValidationMessageFor(model => model.Prompt.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @Html.LabelFor(model => model.Prompt.Category.Name, "Category", htmlAttributes: new { @class = "boton1" })
        <div>
            @Html.DropDownListFor(model => model.Prompt.Category.Name, Model.CategoryList,  htmlAttributes: new { @style = " width: 300px; height: 48px; border: 1px solid rgba(255, 255, 255, .4);border - radius: 4px; background - clip: padding - box;display: block;font - family: 'Open Sans', sans - serif; font - size: 40px; font - weight: 400; background - color: white;color: #855C6A;margin-left: 28px; padding:0px 10px 20px  10px;" })
            @Html.ValidationMessageFor(model => model.CategoryList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @Html.LabelFor(model => model.Prompt.TimeOfPrompt, htmlAttributes: new { @class = "boton1" })
        <div>
            @Html.EditorFor(model => model.Prompt.TimeOfPrompt, new { htmlAttributes = new { @class = "input" } })
            @Html.ValidationMessageFor(model => model.Prompt.TimeOfPrompt, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        <div class="boton1">  Image</div>
        <div> <img style="width:500px; height:300px; margin:2px" ; src="@Url.Content(Model.Prompt.Image)" /></div>
        <div>
            @Html.EditorFor(model => model.Prompt.Image, new { htmlAttributes = new { @class = "input" } })
            @Html.ValidationMessageFor(model => model.Prompt.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <div>
            <input type="submit" value="Save" class="button" />
        </div>
    </div>


</div>

    <div style="float:right; width:45%">
        <div class="boton1">
            Actions
        </div>
        @if (Model.Prompt.Actions!=null)
        {
            for (int i = 0; i < Model.Prompt.Actions.Count; i++)
            {
                <div>
                    @Html.EditorFor(model => model.Prompt.Actions[i].Name, new { htmlAttributes = new { @class = "input" } })
                </div>
            }
        }

        <div id="textBox">

        </div>
        @if (Model.Prompt.Actions != null)
        {
            <input value="Add" type="button" class="button" id="AddingButton" col="@Model.Prompt.Actions.Count" />
        }
        else
        {
            <input value="Add" type="button" class="button" id="AddingButton" col="0" />
        }
    </div>
}
